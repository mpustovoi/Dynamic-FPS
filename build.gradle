plugins {
	id "maven-publish"
	alias libs.plugins.fabric.loom
}

group = project.maven_group
version = "${generateVersion()}+minecraft-${libs.versions.minecraft.get()}"

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url = "https://maven.shedaniel.me/" } // cloth config
	maven { url = "https://maven.terraformersmc.com/releases/" } // modmenu
}

dependencies {
	minecraft libs.minecraft
	mappings loom.officialMojangMappings()

	modImplementation libs.fabric.api
	modImplementation libs.fabric.loader

	// Why do I need this on 0.15.x ..?
	modImplementation libs.mixinextras
	annotationProcessor libs.mixinextras

	modApi libs.modmenu
	modApi libs.cloth.config
}

loom {
	accessWidenerPath = file("src/main/resources/dynamic_fps.accesswidener")
}

processResources {
	inputs.property "version", generateVersion()

	filesMatching("fabric.mod.json") {
		expand "version": generateVersion()
	}
}

java {
	withSourcesJar()

	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"

	javaCompiler = javaToolchains.compilerFor {
		languageVersion = JavaLanguageVersion.of(8)
	}

	it.options.compilerArgs += ["-Xlint:deprecation", "-Xlint:unchecked"]
}

tasks.withType(org.gradle.jvm.tasks.Jar).configureEach {
	it.from(".") {
		include("LICENSE")
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}

def generateVersion() {
	var version = project.mod_version;
	// NOTE: To create a release jar run `./gradlew build -Prelease=true`
	return project.hasProperty("release") ? version : version + "-alpha";
}
